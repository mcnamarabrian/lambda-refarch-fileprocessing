AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template to create file processing architecture represented at https://github.com/aws-samples/lambda-refarch-fileprocessing.
Parameters:
  ConversionLogLevel:
    Type: String
    Default: INFO
    AllowedValues:
    - INFO
    - DEBUG
  SentimentLogLevel:
    Type: String
    Default: INFO
    AllowedValues:
    - INFO
    - DEBUG
  AdminEmailAddress:
    Type: String
    Default: ""
    Description: "OPTIONAL: Administrative email address that will receive processing failure messages."
Conditions:
  CreateAdminEmailSub:
    !Not [!Equals [!Ref AdminEmailAddress, ""]]
Resources:
  InputBucket:
    Type: AWS::S3::Bucket
  CloudTrailBucket:
    Type: AWS::S3::Bucket
  InputBucketTrail:
    DependsOn: CloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName:
        Ref: CloudTrailBucket
      EventSelectors:
      - DataResources:
        - Type: AWS::S3::Object
          Values:
          - Fn::Sub: arn:aws:s3:::${InputBucket}/
        IncludeManagementEvents: false
        ReadWriteType: WriteOnly
      IsLogging: true
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudTrailBucket
    Properties:
      Bucket:
        Ref: CloudTrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AWSCloudTrailAclCheck
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource:
            Fn::Sub: arn:aws:s3:::${CloudTrailBucket}
        - Sid: AWSCloudTrailWrite
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource:
            Fn::Sub: arn:aws:s3:::${CloudTrailBucket}/AWSLogs/${AWS::AccountId}/*
          Condition:
            StringEquals:
              s3:x-amz-acl: bucket-owner-full-control
  FileProcessingQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: ConversionQueue
      - Ref: SentimentQueue
      - Ref: ReplayQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - ConversionQueue
            - Arn
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::GetAtt:
                - FileProcessingRule
                - Arn
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - SentimentQueue
            - Arn
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::GetAtt:
                - FileProcessingRule
                - Arn
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - ReplayQueue
            - Arn
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::GetAtt:
                - FileProcessingRule
                - Arn
  FileProcessingRule:
    Type: AWS::Events::Rule
    DependsOn:
    - ConversionQueue
    - SentimentQueue
    - ReplayQueue
    Properties:
      Description: Rule to capture S3 PutObject events
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - AWS API Call via CloudTrail
        detail:
          eventSource:
          - s3.amazonaws.com
          eventName:
          - PutObject
          requestParameters:
            bucketName:
            - Ref: InputBucket
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - ConversionQueue
          - Arn
        Id: Convert
      - Arn:
          Fn::GetAtt:
          - SentimentQueue
          - Arn
        Id: Sentiment
      - Arn:
          Fn::GetAtt:
          - ReplayQueue
          - Arn
        Id: Replay
  ConversionQueue:
    Type: AWS::SQS::Queue
    DependsOn: ConversionDlq
    Properties:
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - ConversionDlq
          - Arn
        maxReceiveCount: 5
  ConversionDlq:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300
  ConversionFailureTopic:
    Type: AWS::SNS::Topic
  ConversionFailureSub:
    Type: AWS::SNS::Subscription
    Condition: CreateAdminEmailSub
    Properties: 
      Endpoint:
        - Ref: AdminEmailAddress
      Protocol: email
      TopicArn: 
       - Ref: ConversionFailureTopic
  ConversionFunction:
    Type: AWS::Serverless::Function
    DependsOn: ConversionTargetBucket
    Properties:
      Description: Convert and store HTML representation of uploaded S3 objects
      Handler: conversion.handler
      Runtime: python3.6
      CodeUri: s3://jr-amz-test/f03ec2c37e6314d796f1ef197fd4e89e
      DeadLetterConfig:
        TargetArn:
          - Ref: ConversionFailureTopic
      Policies:
      - SQSPollerPolicy:
          QueueName:
            Fn::GetAtt:
            - ConversionQueue
            - Arn
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:GetObjectVersion
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: InputBucket
              - /*
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
            Fn::GetAtt:
            - InputBucket
            - Arn
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: s3:PutObject
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: ConversionTargetBucket
              - /*
      - Version: '2012-10-17'
        - Effect: Allow
          Action: sns:Publish
          Resource:
            - Ref: ConversionFailureTopic
      Environment:
        Variables:
          TARGET_BUCKET:
            Ref: ConversionTargetBucket
          CONVERSION_QUEUE:
            Ref: ConversionQueue
          LOG_LEVEL:
            Ref: ConversionLogLevel
      Events:
        ConversionQueueReaderEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - ConversionQueue
              - Arn
            BatchSize: 10  
  ConversionTargetBucket:
    Type: AWS::S3::Bucket
  SentimentQueue:
    Type: AWS::SQS::Queue
    DependsOn: SentimentDlq
    Properties:
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - SentimentDlq
          - Arn
        maxReceiveCount: 5
  SentimentDlq:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300
  SentimentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Detect and store sentiment from uploaded S3 objects
      Handler: sentiment.handler
      Runtime: python3.6
      CodeUri: s3://jr-amz-test/9b451f8743414ac77d0fda9996941a1b
      Policies:
      - SQSPollerPolicy:
          QueueName:
            Fn::GetAtt:
            - SentimentQueue
            - Arn
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:GetObjectVersion
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: InputBucket
              - /*
        - Effect: Allow
          Action:
          - s3:ListBucket
          Resource:
            Fn::GetAtt:
            - InputBucket
            - Arn
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - comprehend:DetectSentiment
          Resource: '*'
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::GetAtt:
            - SentimentTable
            - Arn
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sqs:DeleteMessage
          Resource:
            Fn::GetAtt:
            - SentimentQueue
            - Arn
      Environment:
        Variables:
          SENTIMENT_TABLE:
            Ref: SentimentTable
          SENTIMENT_QUEUE:
            Ref: SentimentQueue
          LOG_LEVEL:
            Ref: SentimentLogLevel
      Events:
        SentimentQueueReaderEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - SentimentQueue
              - Arn
            BatchSize: 10
  SentimentTable:
    Type: AWS::Serverless::SimpleTable
    TableName: ref-arch-filearch-document-sentiment
    PrimaryKey:
      Name: s3_object
      Type: String
  ReplayQueue:
    Type: AWS::SQS::Queue
    DependsOn: ReplayDlq
    Properties:
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - ReplayDlq
          - Arn
        maxReceiveCount: 5
  ReplayDlq:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300
